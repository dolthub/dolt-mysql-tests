# Test of the conversion from JSON data type to MySQL types
# ----------------------------------------------------------------------
# Set up auxiliary table with possible JSON values. The idea here is to
# enumerate all possible types of JSON values, including the different
# opaque values we could possibly end up with. A difficulty here is that
# it is hard create scenarios that will actually employ all possible
# MYSQL_TYPE_* types inside opaque: partly because some are used as
# native scalars, e.g. signed int -> JSON (signed) INTEGER, partly
# because not all MYSQL_TYPE_* values can actually label a column, but
# are seemingly only used in intermediate steps, e.g. BINARY and
# VARBINARY which end up as column with CHAR and VARCHAR with binary
# character set internally.
